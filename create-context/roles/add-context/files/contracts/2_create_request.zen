Rule caller restroom-mw
Rule input encoding base58
Rule output encoding base58

Scenario 'ecdh': keys
Scenario 'eddsa': keys
Scenario 'ethereum': keys
Scenario 'reflow': keys

# timestamp in messages to avoid replay attack
Given I fetch the local timestamp and store it into 'timestamp'
Given I have a 'string' named 'timestamp'

# load the spec admin keyring to sign the request
Given my name is in a 'string' named 'controller'
and I have my 'keyring'

# keys
Given I have a 'string array' named '@context'

# data
Given I have a 'string' named 'did_spec'
and I have a 'string' named 'signer_did_spec'
and I have a 'string' named 'identity'
and I rename 'identity' to 'description'
and I have a 'eddsa_public_key'
and I rename 'eddsa_public_key' to 'identity pk'
and I have a 'ethereum_address'
and I have a 'ecdh_public_key'
and I have a 'reflow_public_key'
and I have a 'base58' named 'bitcoin public key'

### Formulate the DID creation request
When I create the 'string dictionary' named 'did document'
and I move '@context' in 'did document'
and I move 'description' in 'did document'

## did spec and id
When I set 'did:dyne:' to 'did:dyne:' as 'string'
and I append 'did_spec' to 'did:dyne:'
and I append the string ':' to 'did:dyne:'
and I append the 'base58' of 'identity pk' to 'did:dyne:'
and I copy the 'did:dyne:' to 'id' in 'did document'

## veririfcationMethod
When I create the 'string array' named 'verificationMethod'

# 1-ecdsa public key
When I create the 'string dictionary' named 'verification-key'
# pk
When I create the 'base58' string of 'ecdh public key'
and I move the 'base58' to 'publicKeyBase58' in 'verification-key'
# type
When I set 'type' to 'EcdsaSecp256k1VerificationKey2019' as 'string'
and I move 'type' in 'verification-key'
# id
When I copy 'did:dyne:' to 'id'
and I append the string '#ecdh_public_key' to 'id'
and I move 'id' in 'verification-key'
# controller
When I copy the 'did:dyne:' to 'controller' in 'verification-key'
and I move 'verification-key' in 'verificationMethod'

# 2-reflow public key
When I create the 'string dictionary' named 'verification-key'
# pk
When I create the 'base58' string of 'reflow public key'
and I move the 'base58' to 'publicKeyBase58' in 'verification-key'
# type
When I set 'type' to 'ReflowBLS12381VerificationKey' as 'string'
and I move 'type' in 'verification-key'
# id
When I copy 'did:dyne:' to 'id'
and I append the string '#reflow_public_key' to 'id'
and I move 'id' in 'verification-key'
# controller
When I copy the 'did:dyne:' to 'controller' in 'verification-key'
and I move 'verification-key' in 'verificationMethod'

# 3-bitcoin public key
When I create the 'string dictionary' named 'verification-key'
# pk
When I create the 'base58' string of 'bitcoin public key'
and I move the 'base58' to 'publicKeyBase58' in 'verification-key'
# type
When I set 'type' to 'EcdsaSecp256k1VerificationKey2019' as 'string'
and I move 'type' in 'verification-key'
# id
When I copy 'did:dyne:' to 'id'
and I append the string '#bitcoin_public_key' to 'id'
and I move 'id' in 'verification-key'
# controller
When I copy the 'did:dyne:' to 'controller' in 'verification-key'
and I move 'verification-key' in 'verificationMethod'

# 4-eddsa public key
When I create the 'string dictionary' named 'verification-key'
# pk
When I create the 'base58' string of 'identity pk'
and I move the 'base58' to 'publicKeyBase58' in 'verification-key'
# type
When I set 'type' to 'Ed25519VerificationKey2018' as 'string'
and I move 'type' in 'verification-key'
# id
When I copy 'did:dyne:' to 'id'
and I append the string '#eddsa_public_key' to 'id'
and I move 'id' in 'verification-key'
# controller
When I copy the 'did:dyne:' to 'controller' in 'verification-key'
and I move 'verification-key' in 'verificationMethod'

# 5-ethereum address
When I create the 'string dictionary' named 'verification-key'
# address
# this follows the CAIP-10(https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-10.md) spec
# thus it is: namespace + ":" + chain_id + ":" + address
When I set 'blockchainAccountId' to 'eip155:1:0x' as 'string'
and I append the 'hex' of 'ethereum address' to 'blockchainAccountId'
and I move 'blockchainAccountId' in 'verification-key'
# type
When I set 'type' to 'EcdsaSecp256k1RecoveryMethod2020' as 'string'
and I move 'type' in 'verification-key'
# id
When I copy 'did:dyne:' to 'id'
and I append the string '#ethereum_address' to 'id'
and I move 'id' in 'verification-key'
# controller
When I copy the 'did:dyne:' to 'controller' in 'verification-key'
and I move 'verification-key' in 'verificationMethod'

When I move 'verificationMethod' in 'did document'
### DID-Document ended

# did document signature
When I create the json of 'did document'
and I create the ecdh signature of 'json'
and I remove 'json'

# result signature
When I create the 'string dictionary' named 'result'
and I copy 'did document' in 'result'
and I copy 'timestamp' in 'result'
and I create the json of 'result'
and I create the eddsa signature of 'json'

# signer id
When I create the eddsa public key
and I set 'id' to 'did:dyne:' as 'string'
and I append 'signer_did_spec' to 'id'
and I append the string ':' to 'id'
and I append the 'base58' of 'eddsa public key' to 'id'

# print did document, signature and signer id
Then print the 'did document'
Then print the 'ecdh signature'
Then print the 'timestamp'
Then print the 'eddsa signature'
Then print the 'id'

Then I print the 'eddsa public key' as 'base58'
Then I print the 'ethereum address'
Then I print the 'ecdh public key' as 'base58'
Then I print the 'bitcoin public key' as 'base58'
Then I print the 'reflow public key' as 'base58'
Then I print the 'keyring'

