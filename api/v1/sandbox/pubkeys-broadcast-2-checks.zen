Rule caller restroom-mw
Scenario 'ecdh': verify signature
Scenario 'w3c': proof
Scenario 'eddsa': Create the key
Scenario 'planetmint': Create the key

# http_request.base_url
Given I read the http request
Given I have a 'string' named 'base_url' inside 'http_request'

# timestamp
Given I fetch the local timestamp and store it into 'broadcast_timestamp'
and I have a 'integer' named 'broadcast_timestamp'

# signer did document
Given I read the content of 'signer_path' and save the output into 'signer_data'
and I have a 'did document' named 'didDocument' in 'signer_data'
and I rename 'didDocument' to 'signer_did_document'
and I have a 'string dictionary' named 'didDocumentMetadata' in 'signer_data'
and I rename 'didDocumentMetadata' to 'signer_metadata'

# request did document
Given I read the content of 'request_path' and save the output into 'request_data'
and I have a 'string dictionary' named 'request_data'
and I rename 'request_data' to 'broadcast_data'

# keys and pks
Given I read the content of 'secrets/planetmint_client.json'
Given my name is in a 'string' named 'identity'
Given I have my 'keyring'
Given I have a 'eddsa public key'

# prepare tx
Given I have a planetmint endpoint named 'planetmint_endpoint'
Given I prepare the planetmint transaction to store 'request_data' from 'eddsa_public_key'
Given I have a 'string' named 'planetmint transaction'

# data
Given I have a 'string' named 'broadcast_id'
and I have a 'ecdh signature'
and I have a 'string' named 'request_path'
and I have a 'string' named 'signer_id'

# verify contract is used inside the chain
When I verify 'base_url' has suffix 'pubkeys-broadcast.chain'

# verify signer did documents is not deactivated
When I set 'false' to 'false' as 'string'
and I verify 'false' is equal to 'deactivated' in 'signer_metadata'

# verify singautres
When I create the 'ecdh' public key from did document 'signer_did_document'
and I verify the 'broadcast_id' has a ecdh signature in 'ecdh signature' by 'ecdh public key'

# sign transaction
When I create the planetmint signatures of 'planetmint transaction'

# log
When I write string '' in 'log_msg'
and I append the 'integer' of 'broadcast_timestamp' to 'log_msg'
and I append the string ';' to 'log_msg'
and I append 'broadcast_id' to 'log_msg'
and I append the string ';B;' to 'log_msg'
and I append 'signer_id' to 'log_msg'

Then print the 'planetmint transaction'
Then print the 'planetmint signatures'
Then print the 'eddsa_public_key'
Then print the 'broadcast_data'
Then print the 'request_path'
Then print the 'log_msg'

Then I prepare the signed planetmint transaction of 'planetmint_transaction' from 'eddsa_public_key'
Then ask planetmint to broadcast the 'signed_planetmint_transaction'