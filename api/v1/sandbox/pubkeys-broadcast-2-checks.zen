Rule caller restroom-mw
Scenario 'eddsa': verify signature
Scenario 'w3c': proof

# http_request.base_url
Given I read the http request
Given I have a 'string' named 'base_url' inside 'http_request'

# timestamp
Given I fetch the local timestamp and store it into 'broadcast_timestamp'
and I have a 'integer' named 'broadcast_timestamp'

# signer did document
Given I read the content of 'signer_path' and save the output into 'signer_data'
and I have a 'did document' named 'didDocument' in 'signer_data'
and I rename 'didDocument' to 'signer_did_document'
and I have a 'string dictionary' named 'didDocumentMetadata' in 'signer_data'
and I rename 'didDocumentMetadata' to 'signer_metadata'

# request did document
Given I read the content of 'request_path' and save the output into 'request_data'
and I have a 'string dictionary' named 'request_data'

# keys
Given I have a 'string array' named 'api_blockchains'
and I have a 'string' named '-'
and I have a 'string' named '.'
and I have a 'integer' named 'expiration_time'

# data
Given I have a 'string' named 'broadcast_id'
and I have a 'eddsa signature'
and I have a 'string' named 'request_path'
and I have a 'string' named 'signer_id'
and I have a 'integer' named 'timestamp'

# verify timestamp
When I create the result of 'broadcast_timestamp' - 'timestamp'
and number 'result' is less or equal than 'expiration_time'

# verify contract is used inside the chain
When I verify 'base_url' has suffix '.chain'

# verify signer did documents is not deactivated
When I set 'false' to 'false' as 'string'
and I verify 'false' is equal to 'deactivated' in 'signer_metadata'

# verify singautres
When I create the 'string dictionary' named 'signed_by_eddsa'
and I copy 'broadcast_id' in 'signed_by_eddsa'
and I copy 'timestamp' in 'signed_by_eddsa'
and I create the json of 'signed_by_eddsa'
and I create the 'eddsa' public key from did document 'signer_did_document'
and I verify the 'json' has a eddsa signature in 'eddsa signature' by 'eddsa public key'

# extract data to be broadcast
When I create the 'string dictionary' named 'broadcast_data'
When I create the copy of '@context' in 'request_data'
and I move the 'copy' to '@context' in 'broadcast_data'
When I create the copy of 'didDocument' in 'request_data'
and I move the 'copy' to 'didDocument' in 'broadcast_data'
When I create the copy of 'didDocumentMetadata' in 'request_data'
and I rename 'copy' to 'didDocumentMetadata_copy'
and I create the 'string dictionary' named 'didDocumentMetadata'
and I pickup from path 'didDocumentMetadata_copy.created'
and I move 'created' in 'didDocumentMetadata'
and I pickup from path 'didDocumentMetadata_copy.deactivated'
and I move 'deactivated' in 'didDocumentMetadata'
If 'updated' is found in 'didDocumentMetadata_copy'
When I pickup from path 'didDocumentMetadata_copy.updated'
and I move 'updated' in 'didDocumentMetadata'
EndIf

# blockchains txids
When I create the array by splitting 'base_url' at '-'
and I create the copy of element '3' in array 'array'
and I remove 'array'
and I rename 'copy' to 'blockchain.chain'
and I create the array by splitting 'blockchain.chain' at '.'
and I create the copy of element '1' in array 'array'
and I remove 'array'
and I rename 'copy' to 'blockchain'
and the 'blockchain' is found in 'api_blockchains'
If the 'blockchain' is found in 'didDocumentMetadata_copy'
When I create the copy of object named by 'blockchain' from dictionary 'didDocumentMetadata_copy'
and I rename 'copy' to named by 'blockchain'
and I move named by 'blockchain' in 'didDocumentMetadata'
EndIf
When I move 'didDocumentMetadata' in 'broadcast_data'

# log
When I write string '' in 'log_msg'
and I append the 'integer' of 'broadcast_timestamp' to 'log_msg'
and I append the string ';' to 'log_msg'
and I append 'broadcast_id' to 'log_msg'
and I append the string ';B;' to 'log_msg'
and I append 'signer_id' to 'log_msg'

Then print the 'broadcast_data'
Then print the 'request_path'
Then print the 'log_msg'
Then print the 'request_data'
Then print the 'blockchain'
