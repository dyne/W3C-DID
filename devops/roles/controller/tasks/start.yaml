---
# TODO: sometime online .bashrc contains an instruction that
# doesn't do anything if login is not interactive
- name: Populate PATH
  become: true
  setup:

- name: Install yarn
  become: true
  community.general.npm:
    name: yarn
    global: yes
    state: latest

- name: Install pm2
  become: true
  community.general.npm:
    name: pm2
    global: yes
    state: latest

- name: Update packages of restroom
  become: true
  community.general.yarn:
    path: "{{ controller_root }}/restroom"
    state: latest

- name: Create planetmint_client keys and did doc
  become: true
  command: yarn run init
  args:
    chdir: "{{ controller_root }}/restroom"

- name: start and save controller with pm2
  become: true
  shell: pm2 delete ecosystem.config.js && pm2 start ecosystem.config.js && pm2 save
  args:
    chdir: "{{ controller_root }}/restroom"

- name: start at system start
  command: pm2 startup -u controller --hp /home/controller
  environment:
    PATH: "{{ ansible_env.PATH }}"
# - name: Nginx service
#   blockinfile:
#     dest: "/etc/nginx/conf.d/controller.conf"
#     create: true
#     block: |
#       server {
#         listen 443 ssl;
#         root /var/www/html;
#         server_name {{ domain_name }};
#         include /etc/nginx/mime.types;
#         ssl_certificate /etc/letsencrypt/live/{{ domain_name}}/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/{{ domain_name}}/privkey.pem;
#         include /etc/letsencrypt/options-ssl-nginx.conf; # Redirect non-https traffic to https
#         if ($scheme != "https") {
#           return 301 https://$host$request_uri;
#       }
#       location ~ ^/1.0/identifiers/(.*) {
#         proxy_pass http://127.0.0.1:12001/api/did-resolve?data=%7B%22id%22%3A%22$1%22%7D;
#       }
#       location / {
#         proxy_pass http://127.0.0.1:12001;
#       }
#     }
#

